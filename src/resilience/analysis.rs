// Implements the resilience analysis functionality, including simulation of faults in the network components.

/*
The study of resilience must be supported by the possibility, once the network is constructed, to study potential failures in different components of the network: connections between neurons, memory areas that hold numerical information (such as weights, thresholds, potentials, etc.) or internal processing blocks within the neuron (such as summation, multiplier or threshold comparator). Possible failures, limited to this design, are single-bit failures, i.e., they involve only one bit among all those susceptible to failure "breaking." Breakage corresponds to a distinct functional behavior that can be categorized as follows: stuck-at-0 (bit remains fixed at 0, even if required otherwise) or stuck-at-1 (bit remains fixed at 0, even if required otherwise), transient bit-flip (bit value is reversed). The temporal nature of the failures identifies how it should be modeled: in the first two cases, each time the bit is used, the corresponding stuck-at-X is applied forcing the bit to the value X for the duration of the inference (i.e., guaranteeing its value at X at each update/write), while in the third case (transient bit-flip), such forcing occurs only at a specific instant of time and any subsequent new writes are unaffected.  The simulation of such failures should require the user to provide: 1. A list of components to be verified 2. The fault model (stuck-at-0, stuck-at-1, transient bit-flip) 3. The number of occurrences of the faults to be verified 4. The normal input sequence of the network itself. Against the data in this list, the simulation must repeat the inference, for all inputs, as many times as the number of occurrences of the faults indicated. For each input it must randomly select a bit belonging to one of the components to be verified and enter the required fault. Example: a configuration indicating: 1. Thresholds, weights and membrane potentials 2. Stuck-at-0 3. 100 faults Would require 100 repetitions of all inferences, randomly selecting one bit on which to apply stuck-at-0 among all the bits of thresholds, weights and potentials.
*/

